//
// OrdersAPI.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation

open class OrdersAPI {
    /**
     Get orders
     
     - parameter page: (query) Page 
     - parameter pageSize: (query) Size 
     - parameter pair: (query) Pair 
     - parameter status: (query) Status 
     - parameter apiResponseQueue: The queue on which api response is dispatched.
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func getOrders(page: Int, pageSize: Int, pair: String, status: Int, apiResponseQueue: DispatchQueue = OpenAPIClientAPI.apiResponseQueue, completion: @escaping ((_ data: OrderList?, _ error: Error?) -> Void)) {
        getOrdersWithRequestBuilder(page: page, pageSize: pageSize, pair: pair, status: status).execute(apiResponseQueue) { result -> Void in
            switch result {
            case let .success(response):
                completion(response.body, nil)
            case let .failure(error):
                completion(nil, error)
            }
        }
    }

    /**
     Get orders
     - GET /en/api/v1/orders/
     - parameter page: (query) Page 
     - parameter pageSize: (query) Size 
     - parameter pair: (query) Pair 
     - parameter status: (query) Status 
     - returns: RequestBuilder<OrderList> 
     */
    open class func getOrdersWithRequestBuilder(page: Int, pageSize: Int, pair: String, status: Int) -> RequestBuilder<OrderList> {
        let path = "/en/api/v1/orders/"
        let URLString = OpenAPIClientAPI.basePath + path
        let parameters: [String: Any]? = nil

        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
            "page": page.encodeToJSON(),
            "page_size": pageSize.encodeToJSON(),
            "pair": pair.encodeToJSON(),
            "status": status.encodeToJSON(),
        ])

        let nillableHeaders: [String: Any?] = [
            :
        ]

        let headerParameters = APIHelper.rejectNilHeaders(nillableHeaders)

        let requestBuilder: RequestBuilder<OrderList>.Type = OpenAPIClientAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, headers: headerParameters)
    }

}
